import random
def menu_math():

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#Liste Des Operateur Possible
    print("Calculatrice Python")
    operation = input("Entrez Une Operation(+, -, x, /, *):") #Ne Pas Espacez sinon il yaura une erreur
    num1 = float(input("Entrez Un Nombre: "))
    num2 = float(input("Entrez Un Autre Nombre: "))

#Addition
    if operation == "+":
        resultat = num1 + num2
        print("=")
        print(round(resultat, 3)) #Arrondir le Resultat a 3 si c'est en virgule (Vous Pouvez Le Modifiez )
#Soustraction
    elif operation == '-':
        resultat = num1 - num2
        print("=")
        print(round(resultat, 3))    #Arrondir le Resultat a 3 si c'est en virgule (Vous Pouvez Le Modifiez )
#Multiplication
    elif operation == 'x':
        resultat = num1 * num2
        print("=")
        print(round(resultat, 3)) #Arrondir le Resultat a 3 si c'est en virgule (Vous Pouvez Le Modifiez )
#Division
    elif operation == '/':
        resultat = num1 / num2
        print("=")
        print(round(resultat, 3))     #Arrondir le Resultat a 3 si c'est en virgule (Vous Pouvez Le Modifiez )
#Puissance
    elif operation == '**':
        resultat = num1 ** num2
        print("=")
        print(round(resultat, 3)) #Arrondir le Resultat a 3 si c'est en virgule (Vous Pouvez Le Modifiez )
    else:
        print(f"Erreur 404 {operation} est Invalide Veuillez Ressayez")

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def CalculMentale():
    print("Calcul Mentale (BigBrain Moment)")
    while True:
        print("1.Facile")
        print("2.Intermediaire")
        print("3.Difficile")
        print("4.G√©nie")
        print("5.Retour‚Ü™")
        choix = input("Choississez La Difficult√© : ")

        if choix == "1":
            Facile()
        elif choix == "2":
            Intermediaire()
        elif choix == "3":
            Difficile()
        elif choix == "4":
            G√©nie()
        elif choix == "5":
            Retour()
        else:
            print("Option invalide, Ressayez encore.")
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def Facile():
    print(f"Difficult√© Facile Est Choisi")


    def generer_exercice():
        """G√©n√®re un exercice de math√©matique al√©atoire"""
        operations = ["+", "-"] #Configurable Vous Pouvez Enlevez Ou Ajoutez Des Operations
        op = random.choice(operations)  # Choisir une op√©ration al√©atoire
        num1 = random.randint(0, 10)  # Configurable Nombre aleatoire pour num1
        num2 = random.randint(0, 10)  # Configurable Nombre aleatoire pour num2

        if op == "/":  # Assurer que la division donne un nombre entier
            while num1 % num2 != 0:  # On veut √©viter les divisions avec reste
                num1 = random.randint(1, 10) # Configurable Nombre aleatoire pour num2
                num2 = random.randint(1, 10) # Configurable Nombre aleatoire pour num2

        question = f"{num1} {op} {num2}"
        reponse = eval(question)  # Calculer la r√©ponse
        return question, reponse

    # Demander combien d'exercices l'utilisateur veut (max 100)
    while True:
        try:
            nb_exercices = int(input("Combien d'exercices voulez-vous ? (max 100) : "))
            if 1 <= nb_exercices <= 100:  # Configurable au dela de 100 si vous le souhaitez
                break
            else:
                print("Veuillez entrer un nombre minimum 1 ")
        except ValueError:
            print("Entr√©e invalide, veuillez entrer un nombre entier.")

    score = 0  # Score de l'utilisateur

    # G√©n√©rer et poser les exercices
    for i in range(nb_exercices):
        question, reponse_correcte = generer_exercice()
        while True:
            try:
                reponse_utilisateur = float(input(f"Exercice {i + 1}: {question} = "))
                if reponse_utilisateur == reponse_correcte:
                    print("Correct !")
                    score += 1
                else:
                    print(f"Faux ! La bonne r√©ponse √©tait {reponse_correcte}.")
                break
            except ValueError:
                print("Veuillez entrer un nombre valide.")

    # Afficher le score final
    print(f"\nüéØ Vous avez obtenu {score}/{nb_exercices} bonnes r√©ponses !")
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def Intermediaire():
        print(f"Difficult√© Intermediaire Est Choisi")

        def generer_exercice():
            """G√©n√®re un exercice de math√©matique al√©atoire"""
            operations = ["+", "-", "*"]  # Configurable Vous Pouvez Enlevez Ou Ajoutez Des Operations
            op = random.choice(operations)  # Choisir une op√©ration al√©atoire
            num1 = random.randint(0, 50)  # Configurable Nombre aleatoire pour num1
            num2 = random.randint(0, 50)  # Configurable Nombre aleatoire pour num2

            if op == "/":  # Assurer que la division donne un nombre entier
                while num1 % num2 != 0:  # On veut √©viter les divisions avec reste
                    num1 = random.randint(1, 50)  # Configurable Nombre aleatoire pour num2
                    num2 = random.randint(1, 50)  # Configurable Nombre aleatoire pour num2

            question = f"{num1} {op} {num2}"
            reponse = eval(question)  # Calculer la r√©ponse
            return question, reponse

        # Demander combien d'exercices l'utilisateur veut (max 100)
        while True:
            try:
                nb_exercices = int(input("üí†Combien d'exercices voulez-vous ? (max 100) : "))
                if 1 <= nb_exercices <= 100:  # Configurable au dela de 100 si vous le souhaitez
                    break
                else:
                    print("Veuillez entrer un nombre minimum 1 ")
            except ValueError:
                print("Entr√©e invalide, veuillez entrer un nombre entier.")

        score = 0  # Score de l'utilisateur

        # G√©n√©rer et poser les exercices
        for i in range(nb_exercices):
            question, reponse_correcte = generer_exercice()
            while True:
                try:
                    reponse_utilisateur = float(input(f"Exercice {i + 1}: {question} = "))
                    if reponse_utilisateur == reponse_correcte:
                        print("Correct !")
                        score += 1
                    else:
                        print(f"Faux ! La bonne r√©ponse √©tait {reponse_correcte}.")
                    break
                except ValueError:
                    print("Veuillez entrer un nombre valide.")

        # Afficher le score final
        print(f"\nVous avez obtenu {score}/{nb_exercices} bonnes r√©ponses !")
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def Difficile():
        print(f"Difficult√© Difficile Est Choisi")

        def generer_exercice():
            """G√©n√®re un exercice de math√©matique al√©atoire"""
            operations = ["+", "-", "*","/"]  # Configurable Vous Pouvez Enlevez Ou Ajoutez Des Operations
            op = random.choice(operations)  # Choisir une op√©ration al√©atoire
            num1 = random.randint(1, 200)  # Configurable Nombre aleatoire pour num1
            num2 = random.randint(1, 200)  # Configurable Nombre aleatoire pour num2

            if op == "/":  # Assurer que la division donne un nombre entier
                while num1 % num2 != 0:  # On veut √©viter les divisions avec reste
                    num1 = random.randint(1, 200)  # Configurable Nombre aleatoire pour num2
                    num2 = random.randint(1, 200)  # Configurable Nombre aleatoire pour num2

            question = f"{num1} {op} {num2}"
            reponse = eval(question)  # Calculer la r√©ponse
            return question, reponse

        # Demander combien d'exercices l'utilisateur veut (max 100)
        while True:
            try:
                nb_exercices = int(input("üí†Combien d'exercices voulez-vous ? (max 100) : "))
                if 1 <= nb_exercices <= 100:  # Configurable au dela de 100 si vous le souhaitez
                    break
                else:
                    print("Veuillez entrer un nombre minimum 1 ")
            except ValueError:
                print("Entr√©e invalide, veuillez entrer un nombre entier.")

        score = 0  # Score de l'utilisateur

        # G√©n√©rer et poser les exercices
        for i in range(nb_exercices):
            question, reponse_correcte = generer_exercice()
            while True:
                try:
                    reponse_utilisateur = float(input(f"Exercice {i + 1}: {question} = "))
                    if reponse_utilisateur == reponse_correcte:
                        print("Correct !")
                        score += 1
                    else:
                        print(f"Faux ! La bonne r√©ponse √©tait {reponse_correcte}.")
                    break
                except ValueError:
                    print("Veuillez entrer un nombre valide.")

        # Afficher le score final
        print(f"\nüéØ Vous avez obtenu {score}/{nb_exercices} bonnes r√©ponses !")

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def G√©nie():
    print(f"Difficult√© Genie Est Choisi")

    def generer_exercice():
        """G√©n√®re un exercice de math√©matique al√©atoire"""
        operations = ["+", "-", "*", "/","**"]  # Configurable Vous Pouvez Enlevez Ou Ajoutez Des Operations
        op = random.choice(operations)  # Choisir une op√©ration al√©atoire
        num1 = random.randint(1, 1000)  # Configurable Nombre aleatoire pour num1
        num2 = random.randint(1, 1000)  # Configurable Nombre aleatoire pour num2

        if op == "/":  # Assurer que la division donne un nombre entier
            while num1 % num2 != 0:  # On veut √©viter les divisions avec reste
                num1 = random.randint(1, 1000)  # Configurable Nombre aleatoire pour num2
                num2 = random.randint(1, 1000)  # Configurable Nombre aleatoire pour num2

            # Assurer que la puissance ne soit pas trop grande
        if op == "**":
            num2 = random.randint(2, 3)  # On limite la puissance √† 2 ou 3 pour √©viter des nombres √©normes
        question = f"{num1} {op} {num2}"
        reponse = eval(question)  # Calculer la r√©ponse
        return question, reponse

    # Demander combien d'exercices l'utilisateur veut (max 100)
    while True:
        try:
            nb_exercices = int(input("üí†Combien d'exercices voulez-vous ? (max 100) : "))
            if 1 <= nb_exercices <= 100:  # Configurable au dela de 100 si vous le souhaitez
                break
            else:
                print("Veuillez entrer un nombre minimum 1 ")
        except ValueError:
            print("Entr√©e invalide, veuillez entrer un nombre entier.")

    score = 0  # Score de l'utilisateur

    # G√©n√©rer et poser les exercices
    for i in range(nb_exercices):
        question, reponse_correcte = generer_exercice()
        while True:
            try:
                reponse_utilisateur = float(input(f"Exercice {i + 1}: {question} = "))
                if reponse_utilisateur == reponse_correcte:
                    print("Correct !")
                    score += 1
                else:
                    print(f"Faux ! La bonne r√©ponse √©tait {reponse_correcte}.")
                break
            except ValueError:
                print("Veuillez entrer un nombre valide.")

    # Afficher le score final
    print(f"\nVous avez obtenu {score}/{nb_exercices} bonnes r√©ponses  !")

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#

A = ["Ne triche pas avec ta calculatrice, elle sait tout... mais pas toi !",
"Les erreurs font partie du calcul, mais corrige-les avant le r√©sultat final.",
"Les maths, c'est magique : un probl√®me, une formule, et hop, une solution !",
"Utilise ta t√™te avant ta calculette, elle a plus de m√©moire qu'elle !",
"Les maths, c'est comme un sport : plus tu pratiques, plus tu deviens fort !",
"Les maths, ce n'est pas juste trouver la r√©ponse, c'est comprendre comment y arriver.",
"Les chiffres ne mentent pas... mais toi, tu peux te tromper, alors v√©rifie !",
"Un bon raisonnement vaut mieux qu‚Äôun calcul rapide et faux.",
"Chercher une solution, c'est d√©j√† faire la moiti√© du travail en maths.",
"J'espere Que Tu Ne Triche Pas Avec Une Calculatrice :) ", "E = Mc¬≤ ",
"Les maths, c‚Äôest comme les l√©gumes : c‚Äôest bon pour toi, mais tu n‚Äôas pas envie d‚Äôen faire.",
"Je voulais √™tre bon en maths‚Ä¶ puis j‚Äôai vu la gueule des fractions.",
"Diviser par z√©ro, c‚Äôest comme manger de la soupe avec une fourchette‚Ä¶ √ßa sert √† rien.",
"En maths comme en amour, une petite erreur de calcul et c‚Äôest la chute libre.",
"En maths, j‚Äôai toujours eu la moyenne‚Ä¶ du tiers inf√©rieur de la classe.",
"Ma note en maths ressemble √† une fonction exponentielle‚Ä¶ mais dans le mauvais sens.",
"Faire des maths en √©t√©, c‚Äôest comme faire du feu dans un d√©sert‚Ä¶ √ßa sert √† rien et √ßa fait mal.",
"Mon prof de maths m‚Äôa dit ‚ÄòTu finiras par comprendre‚Äô‚Ä¶ J‚Äôesp√®re que c‚Äôest pas sur mon lit de mort.",
"Les maths, c'est simple : soit tu r√©ussis, soit tu pleures en regardant ta copie.",
"Ma note en maths est tellement basse qu‚Äôelle est six pieds sous terre.",
"Mes r√©sultats en maths ressemblent √† la Bourse de 1929‚Ä¶ une chute libre sans retour.",
"J‚Äôai essay√© de r√©soudre une √©quation‚Ä¶ maintenant elle est inscrite sur ma pierre tombale.",
"Si un jour je disparais, cherchez-moi sous ma pile de devoirs de maths.",
"Mon prof m‚Äôa dit ‚ÄòLes maths, c‚Äôest la vie‚Äô‚Ä¶ Maintenant je comprends pourquoi j‚Äôai envie d‚Äôen finir.",
"Les maths, c‚Äôest comme une maladie incurable‚Ä¶ sauf que personne ne cherche de rem√®de.",
"Les int√©grales m‚Äôont vid√© de mon √©nergie‚Ä¶ et bient√¥t de mon sang.","‚û°Ô∏è https://guns.lol/jexorvoid ‚¨ÖÔ∏è",
"Mon cerveau a tent√© de comprendre un probl√®me‚Ä¶ il est actuellement en soins intensifs.",
"J‚Äôai voulu faire un exercice de maths‚Ä¶ maintenant je suis en PLS dans un coin de la pi√®ce.",
"Les maths ne m‚Äôont pas encore tu√©‚Ä¶ mais elles s‚Äôacharnent.","Regarde Mes Autres Projets Post√© Sur Github : BuingDavidTheStyle","Mon Discord: buinggamer ",
"Fait Moi Un Don Pour Me Soutenir Stv ! ","Paye 29.99$ avec -10% de reduction pour debloquer toutes les fonctionnalit√© (Non je blague c'est gratuit F-R-E-E)",
"Quesqui est Jaune Et qui attend ?","ERROR 404 Please Check Your Connection And Restart (:"
]


#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
def Retour():
    print("Vous Avez Choisi 'Retour‚Ü™Ô∏è'")
    while True:
        print("\n=== MENU PRINCIPAL ===")
        print("Selectionnez Une option: 1 , 2 ou 3")
        print("1.Calculatrice")
        print("2.Calcul Mentale")
        print("3.Quitter")
        print(random.choice(A))
        print(random.choice(A))
        print("Credit: B.David, 2025 ")
        choix = input("Choisissez une option: ")

        if choix == "1":
            menu_math()
        elif choix == "2":
            CalculMentale()
        elif choix == "3":
            quit()
        else:
            print("Option invalide, Ressayez encore.")
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
while True:
    print("\n === MENU PRINCIPAL === ")
    print("Selectionnez Une option: 1 , 2 ou 3")
    print("1.Calculatrice")
    print("2.Calcul Mentale")
    print("3.Quitter")
    print(random.choice(A))
    print(random.choice(A))
    print("Credit: B.David ")
    choix = input("Choisissez une option : ")

    if choix == "1":
        menu_math()
    elif choix == "2":
        CalculMentale()
    elif choix == "3":
        print("Au revoir !")
        break
    else:
        print("Option invalide, Ressayez encore.")
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
